// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// moranTest
List moranTest(NumericVector xr, NumericMatrix Wr, unsigned int reps);
RcppExport SEXP phylosignal_moranTest(SEXP xrSEXP, SEXP WrSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Wr(WrSEXP );
        Rcpp::traits::input_parameter< unsigned int >::type reps(repsSEXP );
        List __result = moranTest(xr, Wr, reps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// kTest
List kTest(NumericVector xr, NumericMatrix vcvr, unsigned int reps);
RcppExport SEXP phylosignal_kTest(SEXP xrSEXP, SEXP vcvrSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type vcvr(vcvrSEXP );
        Rcpp::traits::input_parameter< unsigned int >::type reps(repsSEXP );
        List __result = kTest(xr, vcvr, reps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// kStarTest
List kStarTest(NumericVector xr, NumericMatrix vcvr, unsigned int reps);
RcppExport SEXP phylosignal_kStarTest(SEXP xrSEXP, SEXP vcvrSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type vcvr(vcvrSEXP );
        Rcpp::traits::input_parameter< unsigned int >::type reps(repsSEXP );
        List __result = kStarTest(xr, vcvr, reps);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// pagelLogLik
double pagelLogLik(double lambda, NumericVector xr, NumericMatrix vcvr);
RcppExport SEXP phylosignal_pagelLogLik(SEXP lambdaSEXP, SEXP xrSEXP, SEXP vcvrSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type vcvr(vcvrSEXP );
        double __result = pagelLogLik(lambda, xr, vcvr);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
